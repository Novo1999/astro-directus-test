---
import Image from 'astro/components/Image.astro'

const { heroData } = Astro.props
const heading = heroData?.item?.element?.[0]?.item?.translations?.[0]?.heading
const subHeading = heroData?.item?.element?.[0]?.item?.translations?.[0]?.sub_heading
const featuredText = heroData?.item?.element?.[0]?.item?.translations?.[0]?.featured_text
const badgeMainText = heroData?.item?.element?.[0]?.item?.translations?.[0]?.badge_main_text
const badgeSubText = heroData?.item?.element?.[0]?.item?.translations?.[0]?.badge_sub_text
const badgeIcon = heroData?.item?.element?.[0]?.item?.translations?.[0]?.badge_icon
const featuredImages = heroData?.item?.element?.[0]?.item?.translations?.[0]?.featured_images
const buttons = heroData?.item?.element?.[0]?.item?.translations?.[0]?.button
---

<section class="bg-white dark:bg-gray-900 border">
  <div class="py-8 px-4 mx-auto max-w-screen-xl text-center lg:py-16 lg:px-12">
    <a
      href="#"
      class="inline-flex justify-between items-center py-1 px-1 pr-4 mb-7 text-sm text-gray-700 bg-gray-100 rounded-full dark:bg-gray-800 dark:text-white hover:bg-gray-200 dark:hover:bg-gray-700"
      role="alert"
    >
      <span class="text-xs bg-primary-600 rounded-full text-white bg-cyan-500 px-4 py-1.5 mr-3">{badgeMainText}</span>
      <span class="text-sm font-medium">{badgeSubText}</span>
      <span class="material-icons mr-4 text-sm">{badgeIcon}</span>
    </a>

    <h1 class="mb-4 text-4xl font-extrabold tracking-tight leading-none text-gray-900 md:text-5xl lg:text-6xl dark:text-white">{heading}</h1>
    <p class="mb-8 text-lg font-normal text-gray-500 lg:text-xl sm:px-16 xl:px-48 dark:text-gray-400">
      {subHeading}
    </p>
    <div class="flex flex-col mb-8 lg:mb-16 space-y-4 sm:flex-row sm:justify-center sm:space-y-0 sm:space-x-4">
      {
        buttons?.map((btn: any) => {
          const buttonText = btn?.item?.translations?.[0]?.text
          const buttonHref = btn?.item?.translations?.[0]?.href
          const buttonIcon = btn?.item?.translations?.[0]?.icon
          const buttonType = btn?.item?.translations?.[0]?.type
          const buttonIconPosition = btn?.item?.translations?.[0]?.icon_position
          const buttonActions = btn?.item?.translations?.[0]?.actions
          return (
            <a
              href={buttonHref}
              class="inline-flex justify-center items-center py-3 px-5 text-base font-medium text-center text-gray-900 rounded-lg border border-gray-300 hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 dark:text-white dark:border-gray-700 dark:hover:bg-gray-700 dark:focus:ring-gray-800 cursor-pointer"
            >
              {buttonIconPosition === 'before' && <span class="material-icons mr-4">{buttonIcon}</span>}
              {buttonText}
              {buttonIconPosition === 'after' && <span class="material-icons mr-4">{buttonIcon}</span>}
            </a>
          )
        })
      }
    </div>
    <div class="px-4 mx-auto text-center md:max-w-screen-md lg:max-w-screen-lg lg:px-36">
      <span class="font-semibold text-gray-400 uppercase">{featuredText}</span>
      <div class="flex flex-wrap justify-center items-center mt-8 text-gray-500 sm:justify-between">
        {
          featuredImages?.map((img: any) => {
            console.log(img)
            const image = img?.item?.translations?.[0]?.image
            const imageObjectFit = img?.item?.translations?.[0]?.object_fit

            return (
              <a href="#" class="mr-5 mb-5 lg:mb-0 hover:text-gray-800 dark:hover:text-gray-400">
                <Image
                  src={`https://yenence-directus-cms.onrender.com/assets/${image}`}
                  width={500}
                  height={500}
                  alt={'img'}
                  style={{
                    objectFit: imageObjectFit,
                  }}
                />
              </a>
            )
          })
        }
      </div>
    </div>
  </div>
</section>
